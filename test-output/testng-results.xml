<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-07T14:48:56 EET" name="Default suite" finished-at="2021-07-07T15:01:07 EET" duration-ms="731585">
    <groups>
      <group name="regression">
        <method signature="CheckPromotion.checkValueToFreeGoods(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" name="checkValueToFreeGoods" class="TestCases.CheckPromotion"/>
      </group> <!-- regression -->
      <group name="SalesOrderRegression">
        <method signature="CheckPromotion.checkValueToFreeGoods(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" name="checkValueToFreeGoods" class="TestCases.CheckPromotion"/>
      </group> <!-- SalesOrderRegression -->
    </groups>
    <test started-at="2021-07-07T14:48:56 EET" name="Default test" finished-at="2021-07-07T15:01:07 EET" duration-ms="731585">
      <class name="TestCases.CheckPromotion">
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:48:56 EET" name="setup" finished-at="2021-07-07T14:49:07 EET" duration-ms="11574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToFreeGoods(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:49:07 EET" name="checkQuantityToFreeGoods" data-provider="quantitytofreegoods" finished-at="2021-07-07T14:49:54 EET" duration-ms="46839" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bonjour]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToFreeGoods -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:49:54 EET" name="close" finished-at="2021-07-07T14:49:56 EET" duration-ms="1266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:49:56 EET" name="setup" finished-at="2021-07-07T14:50:03 EET" duration-ms="7636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToFreeGoods(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:50:03 EET" name="checkQuantityToFreeGoods" data-provider="quantitytofreegoods" finished-at="2021-07-07T14:51:04 EET" duration-ms="61147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bonjour]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToFreeGoods -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:51:04 EET" name="close" finished-at="2021-07-07T14:51:06 EET" duration-ms="1350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:51:06 EET" name="setup" finished-at="2021-07-07T14:51:12 EET" duration-ms="5874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToFreeGoods(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:51:12 EET" name="checkQuantityToFreeGoods" data-provider="quantitytofreegoods" finished-at="2021-07-07T14:52:13 EET" duration-ms="61345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bonjour]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToFreeGoods -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:52:13 EET" name="close" finished-at="2021-07-07T14:52:14 EET" duration-ms="1290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:52:14 EET" name="setup" finished-at="2021-07-07T14:52:22 EET" duration-ms="7647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToNewPrice(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:52:22 EET" name="checkQuantityToNewPrice" data-provider="quantitytonewprice" finished-at="2021-07-07T14:53:09 EET" duration-ms="46685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[metro market]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToNewPrice -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:53:09 EET" name="close" finished-at="2021-07-07T14:53:10 EET" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:53:10 EET" name="setup" finished-at="2021-07-07T14:53:17 EET" duration-ms="7104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToPercantage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:53:17 EET" name="checkQuantityToPercantage" data-provider="quantitytopercantage" finished-at="2021-07-07T14:54:17 EET" duration-ms="60009" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bonjour]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[bounty]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToPercantage -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:54:17 EET" name="close" finished-at="2021-07-07T14:54:18 EET" duration-ms="1322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:54:18 EET" name="setup" finished-at="2021-07-07T14:54:25 EET" duration-ms="7270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToValue(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:54:25 EET" name="checkQuantityToValue" data-provider="quantitytovalue" finished-at="2021-07-07T14:55:25 EET" duration-ms="59957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[bonjour]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Caramel chocolate]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToValue -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:55:25 EET" name="close" finished-at="2021-07-07T14:55:27 EET" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:55:27 EET" name="setup" finished-at="2021-07-07T14:55:34 EET" duration-ms="7340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkQuantityToValue(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:55:34 EET" name="checkQuantityToValue" data-provider="quantitytovalue" finished-at="2021-07-07T14:56:36 EET" duration-ms="62380" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[bonjour]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Caramel chocolate]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Something wrong with value promotion expected [20.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Something wrong with value promotion expected [20.0] but found [0.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:701)
at TestCases.CheckPromotion.checkQuantityToValue(CheckPromotion.java:158)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkQuantityToValue -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:56:36 EET" name="close" finished-at="2021-07-07T14:56:38 EET" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:56:38 EET" name="setup" finished-at="2021-07-07T14:56:45 EET" duration-ms="7166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkValueToFreeGoods(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:56:45 EET" name="checkValueToFreeGoods" data-provider="valuetogoods" finished-at="2021-07-07T14:57:43 EET" duration-ms="58535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hyper one market]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValueToFreeGoods -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:57:43 EET" name="close" finished-at="2021-07-07T14:57:45 EET" duration-ms="1402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:57:45 EET" name="setup" finished-at="2021-07-07T14:57:52 EET" duration-ms="7378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkValueToNewPrice(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:57:52 EET" name="checkValueToNewPrice" data-provider="valuetonewprice" finished-at="2021-07-07T14:58:54 EET" duration-ms="61562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[metro market]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValueToNewPrice -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:58:54 EET" name="close" finished-at="2021-07-07T14:58:55 EET" duration-ms="1185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:58:55 EET" name="setup" finished-at="2021-07-07T14:59:02 EET" duration-ms="7246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkValueToPercantage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T14:59:02 EET" name="checkValueToPercantage" data-provider="valuetopercantage" finished-at="2021-07-07T15:00:00 EET" duration-ms="57553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carrefour market]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wafers]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValueToPercantage -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T15:00:00 EET" name="close" finished-at="2021-07-07T15:00:01 EET" duration-ms="1257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T15:00:01 EET" name="setup" finished-at="2021-07-07T15:00:08 EET" duration-ms="7167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkValueToValue(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T15:00:08 EET" name="checkValueToValue" data-provider="valuetovalue" finished-at="2021-07-07T15:01:06 EET" duration-ms="57886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hyper one market]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[cash]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Caramel chocolate]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[carbon]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValueToValue -->
        <test-method is-config="true" signature="close()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T15:01:06 EET" name="close" finished-at="2021-07-07T15:01:07 EET" duration-ms="1248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:TestCases.CheckPromotion@57d7f8ca]" started-at="2021-07-07T15:01:07 EET" name="teardown" finished-at="2021-07-07T15:01:08 EET" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- TestCases.CheckPromotion -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
